buildscript {
    ext {
        springBootVersion = '1.5.10.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "io.franzbecker.gradle-lombok" version "1.11"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'pmd'
apply plugin: 'org.springframework.boot'

version = '0.0.0-SNAPSHOT'
group = 'com.parking'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

pmd {
    ignoreFailures = false
    consoleOutput = true
    ruleSets = []
    ruleSetFiles = files('config/pmd/rulesets.xml')
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

configurations {
    dev
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:1.5.10.RELEASE") {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
    }
    compile("com.fasterxml.jackson.core:jackson-databind:2.9.1") {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-annotations'
    }
    compile("com.fasterxml.jackson.core:jackson-annotations:2.9.1")
    compile("com.fasterxml.jackson.core:jackson-core:2.9.1")
    compile("org.springframework.boot:spring-boot-starter-actuator:1.5.10.RELEASE")
    compile("com.microsoft.azure:azure-servicebus:1.2.5")
    compile("com.microsoft.azure:azure-storage:2.0.0")
    compile("org.apache.commons:commons-lang3:3.7")

    testCompile("org.springframework.boot:spring-boot-starter-test:1.5.10.RELEASE")

    dev("org.springframework.boot:spring-boot-devtools:1.5.10.RELEASE")
}

bootRun {
    classpath = sourceSets.main.runtimeClasspath + configurations.dev
}

springBoot {
    executable = true
}
